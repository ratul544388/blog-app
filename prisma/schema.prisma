generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String
  name     String
  email    String
  imageUrl String

  posts Post[]
  votes Vote[]
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  title       String
  description String
  photo       String

  comments Comment[]
  votes    Vote[]
}

model Vote {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String @db.ObjectId

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId

  type VoteType
}

model Comment {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String @db.ObjectId

  replyToId String?   @db.ObjectId
  replyTo   Comment?  @relation("ReplyTo", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies   Comment[] @relation("ReplyTo")
}

enum VoteType {
  UP
  DOWN
}
